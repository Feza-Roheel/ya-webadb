{
  "name": "@yume-chan/adb-backend-webusb",
  "version": "0.0.16",
  "description": "Backend for `@yume-chan/adb` using WebUSB API.",
  "keywords": [
    "webusb",
    "adb"
  ],
  "license": "MIT",
  "author": {
    "name": "Simon Chan",
    "email": "cnsimonchan@live.com",
    "url": "https://chensi.moe/blog"
  },
  "homepage": "https://github.com/yume-chan/ya-webadb/tree/master/libraries/adb-backend-webusb#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yume-chan/ya-webadb.git",
    "directory": "libraries/adb-backend-webusb"
  },
  "bugs": {
    "url": "https://github.com/yume-chan/ya-webadb/issues"
  },
  "type": "module",
  "main": "esm/index.js",
  "types": "esm/index.d.ts",
  "dependencies": {
    "@types/w3c-web-usb": "^1.0.4",
    "@yume-chan/adb": "^0.0.16",
    "@yume-chan/struct": "^0.0.16",
    "tslib": "^2.3.1"
  },
  "devDependencies": {
    "jest": "^28.1.0",
    "typescript": "4.7.2",
    "@yume-chan/ts-package-builder": "^1.0.0"
  },
  "scripts": {
    "build": "build-ts-package",
    "build:watch": "build-ts-package --incremental",
    "//test": "jest --coverage"
  },
  "readme": "# @yume-chan/adb-backend-webusb\n\nBackend for `@yume-chan/adb` using WebUSB ([MDN](https://developer.mozilla.org/en-US/docs/Web/API/USB), [Spec](https://wicg.github.io/webusb)) API.\n\n- [Note](#note)\n- [`pickDevice`](#pickdevice)\n- [`fromDevice`](#fromdevice)\n- [`connect`](#connect)\n\n## Note\n\nWebUSB API requires [secure context](https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts) (basically means HTTPS).\n\nChrome will treat `localhost` as secure, but if you want to access a dev server running on another machine, you need to add the domain to the allowlist:\n\n1. Open `chrome://flags/#unsafely-treat-insecure-origin-as-secure`\n2. Add the protocol and domain part of your url (e.g. `http://192.168.0.100:9000`) to the input box\n3. Choose `Enable` from the dropdown menu\n4. Restart your browser\n\n## `pickDevice`\n\n```ts\nstatic async pickDevice(): Promise<AdbWebBackend | undefined>\n```\n\nRequest browser to present a list of connected Android devices to let the user choose from.\n\nReturns `undefined` if the user canceled the picker.\n\n## `fromDevice`\n\n```ts\nstatic async fromDevice(device: USBDevice): Promise<AdbWebBackend>\n```\n\nCreate an `AdbWebBackend` instance from an exist `USBDevice` instance.\n\n## `connect`\n\n```ts\nasync connect(): Promise<ReadableWritablePair<AdbPacketCore, AdbPacketInit>>\n```\n\nConnect to a device and create a pair of `AdbPacket` streams.\n"
}